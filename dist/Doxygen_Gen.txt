
                                  
======================================================================================
*                                SUMMARY                                                     *        
======================================================================================

*   Date and Time               : Sat Jul 07 18:29:48 2018
*   Input File                  : C:/Users/anish/Downloads/U_Anish_WhDyAcSigRe_With_REQf.c                                
*   Output File                 : Doxygen_Gen.txt
*   Number Of Test Cases        : 38
*   Number Of Lines             : 4704
*   Number Of Asserts           : 190
*   Number of Annotations Missed: 0
*   Where You Missed Annotation : <Line Numbers:>
                                   []
*   Number Of Asserts Missed    : 3
*   Where You Missed Asserts    :

 ======================================================================================
Test Case                                               Num of Asserts                                                     
=======================================================================================
TC4WD_SUPPORT_PRE_PROCESSING_Test_02         ---->   2
TC4WD_SUPPORT_PRE_PROCESSING_Test_03         ---->   1                                              
***************************************************************************************

==================================End Of Summary=========================================
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_01
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_01
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TCS_STATUS_FLAGS.DRIVING_DIRECTION_VALID set to  True
 * TCS_STATUS_FLAGS.REVERSE_DRIVING_INFO set to  False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_MOVEMENT_DETECTED set to False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_DETECTION_IS_POSSIBLE set to False
 * 
 * b:
 * TCS_STATUS_FLAGS.DRIVING_DIRECTION_VALID set to  False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_MOVEMENT_DETECTED set to True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_INITIALISE (), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING is equal to True,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_02
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_02
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * ESTIMATED_SLOPE_FILTERED set to  (TC4WD_SUPPORT.ENTRY_SLOPE) - 1
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_pattern_ref_high_gsens
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.ENTRY_SLOPE is equal to MAX(TC4WD_SUPPORT.ENTRY_SLOPE, ESTIMATED_SLOPE_FILTERED),  
 * 
 * b:
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 * * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 *
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 * * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to ! Tc4wd_sup_act_doubt_ref_low
 * ESTIMATED_SLOPE_ACTUAL set to 1500
 * ESTIMATED_SLOPE_FILTERED set to 500
 * Get_ayc_engine_control() set to True
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_ref_low
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  False
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME is equal to  Tcs0_4wd_feedback_max_time,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME is equal to  Tcs0_4wd_feedback_min_time,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_05
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_05
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED set to  (-31)
 * 
 * b:
 * TCS_ACTUAL_TF_TORQUE set to  2000
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME is equal to Tcs0_4wd_gsens_cnt_thr + 200,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME is equal to  Tcs0_4wd_gsens_cnt_thr,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_06
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_06
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER set to  (Tcs0_4wd_clutch_deadtime_thr + (sint16)Scaled_time(140u /*ms*/)-1)
 * 
 * b:
 * TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER set to  (Tcs0_4wd_clutch_deadtime_thr + (sint16)Scaled_time(140u /*ms*/)+1)
 * TC4WDREF_CLUTCH_ACCELERATION_TIMER set to  needed_est_time+1
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.THRESHOLDS.CLUTCH_MAX_TIME is equal to Tcs0_4wd_clutch_max_open_time,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.THRESHOLDS.CLUTCH_MAX_TIME is equal to Tcs0_4wd_clutch_min_open_time,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_07
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_07
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * BUS_ENGINE_SIGNAL_QUALITY.DRIVER_REQ_IDLE_QF set to  False
 * GET_DRIVER_REQ_IDLE__return set to  True
 * 
 * b:
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DOUBT2 is equal to False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DOUBT2 is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DOUBT2 is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_08
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_08
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WDREF_LONG_SENS_VEHACC_MAX set to ((100 * Tcs0_4wd_possible_accel_gap)+1)
 * ESTIMATED_SLOPE_FILTERED set to Tcs0_4wd_slope_thr +1
 * ESTIMATED_SLOPE_ACTUAL set to ESTIMATED_SLOPE_FILTERED+1
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * Get_ayc_engine_control() set to False
 * TC4WD_SUPPORT.REF_FAILURE set to TC4WD_SUPPORT.ENTRY_REF_FAILURE+1
 * 
 * b:
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  False
 * 
 * c:
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  False
 * TC4WD_SUPPORT.ENTRY_SLOPE set to  ESTIMATED_SLOPE_FILTERED + 500
 * Get_ayc_engine_control() set to True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 100), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.LOW_BY_CLUTCH is equal to  True,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.LOW_BY_BRAKE is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.LOW_BY_ENGINE is equal to  True,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_CLUTCH is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_BRAKE is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_ENGINE is equal to  False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.LOW_BY_CLUTCH is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.LOW_BY_BRAKE is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.LOW_BY_ENGINE is equal to  False,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_CLUTCH is equal to  True,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_BRAKE is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_09
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_09
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.REF_FAILURE set to TC4WD_SUPPORT.ENTRY_REF_FAILURE - 1
 * Get_ayc_engine_control() set to True
 * TC4WD_SUPPORT.ENTRY_SLOPE set to (ESTIMATED_SLOPE_FILTERED + 400)+1
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * 
 * b:
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.ENTRY_REF_FAILURE + 1
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  False
 * 
 * c:
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.ENTRY_REF_FAILURE + 1
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  False
 * TC4WD_SUPPORT.ENTRY_SLOPE set to  ESTIMATED_SLOPE_FILTERED
 * Get_ayc_engine_control() set to False
 * 
 * d:
 * TC4WD_SUPPORT.ENTRY_SLOPE set to  ESTIMATED_SLOPE_FILTERED
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 100), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 350), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.HIGH_BY_CLUTCH  is equal to True,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.HIGH_BY_BRAKE  is equal to True,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.HIGH_BY_ENGINE  is equal to True,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_CLUTCH  is equal to False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_BRAKE  is equal to False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_ENGINE  is equal to False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.HIGH_BY_CLUTCH is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.HIGH_BY_BRAKE is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.HIGH_BY_ENGINE is equal to  False,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_CLUTCH is equal to  True,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_BRAKE is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_ENGINE is equal to  True,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_CLUTCH is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_BRAKE is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_ENGINE is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_10
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_10
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WDREF_LONG_SENS_VEHACC_MAX set to (100 * Tcs0_4wd_possible_accel_gap) - 1
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  True
 * 
 * b:
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  False
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_GSENS is equal to True,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_GSENS is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_11
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_11
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * ESTIMATED_SLOPE_SAVE set to (ESTIMATED_SLOPE_FILTERED - 400) + 1
 * 
 * b:
 * ESTIMATED_SLOPE_SAVE set to  (ESTIMATED_SLOPE_FILTERED - 400) - 1
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to  False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 150), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.STOP_TOO_LOW is equal to True,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.STOP_TOO_LOW is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_12
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_12
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TCS_END_TIMER[pt_eng_id] set to  217
 * WHDYAC_DRIVING_SITUATION_I.TCS_MY_SPLIT_MODUS set to  False
 * TCS_LAT_ACCELERATION set to  (Tcs_4wd_clutch_lat_acc_thr + Tcs0_4wd_lat_acc_hyst) - 1
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to  False
 * WHDYACFD_DISABLE.VSUPP_CLU_DISABLED set to  False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * 
 * b:
 * TCS_END_TIMER[pt_eng_id] set to  2170
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.STOP_TOO_HIGH is equal to  False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.STOP_TOO_HIGH is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_13
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_13
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_CLUTCH is equal to (Tcs0_4wd_ref_supp_clutch_enable != 0),  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_CLUTCH is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_14
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_14
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_ENGINE is equal to  (Tcs0_4wd_ref_supp_engine_enable != 0),  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_ENGINE is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_15
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_15
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_BRAKE is equal to  (Tcs0_4wd_ref_supp_brake_enable != 0),  
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_BRAKE is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_16
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_16
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_ref_high
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_ref_low
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 30), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_ENGINE_AFTER_BRAKE is equal to  (Tcs0_4wd_ref_supp_engine_enable != 0),  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_ENGINE_AFTER_BRAKE is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_17
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_17
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to False
 * TC4WD_SUPPORT.CONDITIONS.DOUBT1 set to  True
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_ref_high
 * 
 * b:
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to  True
 * TC4WD_SUPPORT.CONDITIONS.DOUBT1 set to  False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_BRAKE_AFTER_ENGINE is equal to  (Tcs0_4wd_ref_supp_brake_enable != 0),  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.DO_BRAKE_AFTER_ENGINE is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_18
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_18
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to  True
 * 
 * b:
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to  False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * TCS_STATUS_FLAGS.DRIVING_DIRECTION_VALID set to  True
 * TCS_STATUS_FLAGS.REVERSE_DRIVING_INFO set to  False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_MOVEMENT_DETECTED set to False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_DETECTION_IS_POSSIBLE set to False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * 
 * c:
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.STOP_ENGINE is equal to  True,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.STOP_ENGINE is equal to  False,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.FORCE_ZERO_BRAKE is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_19
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_19
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TCS_SENSOR_STATE.PULLED_HANDBRAKE_RECOGNIZED set to  True
 * 
 * b:
 * TCS_SENSOR_STATE.PULLED_HANDBRAKE_RECOGNIZED set to  False
 * bus_clutch_signal.INFO.QUALIFIER set to  False
 * WHDYACFD_DISABLE.VSUPP_CLU_DISABLED set to False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to True
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * TCS_RESISTANCE_ROAD set to  Tcs0_4wd_resist_cond_clutch - 1
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.STOP_CLUTCH is equal to True,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.STOP_CLUTCH is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_PRE_PROCESSING_Test_20
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_20
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 0
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 0
 * 
 * b:
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 600
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 600
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_CLUTCH_DEADTIMER is equal to True,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.CONDITIONS.RESET_CLUTCH_DEADTIMER is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_01
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_01
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE + 1
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_default
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * TCS_LAT_ACCELERATION set to  Tcs_4wd_clutch_lat_acc_thr - 1
 * ESTIMATED_SLOPE_FILTERED set to  Tcs0_4wd_slope_thr + 1
 * ESTIMATED_SLOPE_ACTUAL set to  ESTIMATED_SLOPE_FILTERED + 1
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * BUS_ENGINE_SIGNAL_QUALITY.DRIVER_REQ_IDLE_QF set to  True
 * TCS_REFERENCE_VELO set to  Tcs_4wd_downhill_velo_thr + 1
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  False
 * ESTIMATED_SLOPE_FILTERED set to  Tcs0_4wd_slope_thr + 1
 * ESTIMATED_SLOPE_ACTUAL set to  ESTIMATED_SLOPE_FILTERED + 1
 * TC4WDREF_LONG_SENS_VEHACC_MAX set to ((100 * Tcs0_4wd_possible_accel_gap)+1)
 * Get_ayc_engine_control() set to False
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.ENTRY_REF_FAILURE + 1
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH set to  True
 * 
 * d:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  False
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.ENTRY_REF_FAILURE - 1
 * TC4WDREF_LONG_SENS_VEHACC_MAX set to  ((100 * Tcs0_4wd_possible_accel_gap) - 1)
 * Get_ayc_engine_control() set to True
 * TC4WD_SUPPORT.ENTRY_SLOPE set to  (ESTIMATED_SLOPE_FILTERED + 400) + 1
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH set to  True
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * TCS_LAT_ACCELERATION set to  Tcs_4wd_clutch_lat_acc_thr - 1
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 100), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_act_doubt_unknown,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP is equal to  True,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_START is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_act_doubt_ref_low,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_act_doubt_ref_high,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_02
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_02
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_ref_high
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_ref_high
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  False
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.ENTRY_REF_FAILURE + 1
 * TC4WD_SUPPORT.ENTRY_SLOPE set to  ESTIMATED_SLOPE_FILTERED
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  False
 * Get_ayc_engine_control() set to False
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH set to  True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_ref_low
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  True
 * 
 * d:
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_ref_low
 * TC4WD_SUPPORT.ENTRY_SLOPE set to  ESTIMATED_SLOPE_FILTERED + 500
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  False
 * Get_ayc_engine_control() set to True
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH set to  True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 100), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_FAILURE_RESET is equal to  True,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_act_pattern_ref_high_gsens,  
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER is equal to  False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_act_doubt_unknown,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_FAILURE_RESET is equal to  True,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP is equal to  True,  
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_act_pattern_ref_low,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_act_doubt_unknown,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_03
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_03
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_pattern_ref_low
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE + 1
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  False
 * TCS_LAT_ACCELERATION set to  Tcs_4wd_clutch_lat_acc_thr - 1
 * ESTIMATED_SLOPE_FILTERED set to  Tcs0_4wd_slope_thr + 1
 * ESTIMATED_SLOPE_ACTUAL set to  ESTIMATED_SLOPE_FILTERED + 1
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * BUS_ENGINE_SIGNAL_QUALITY.DRIVER_REQ_IDLE_QF set to  True
 * TCS_REFERENCE_VELO set to  Tcs_4wd_downhill_velo_thr + 1
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_low
 * TC4WD_SUPPORT.CONDITIONS.DOUBT1 set to  False
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE - 1
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  True
 * ESTIMATED_SLOPE_SAVE set to (ESTIMATED_SLOPE_FILTERED - 400) + 1
 * 
 * c:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_pattern_ref_high_gsens
 * TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER set to  TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME - 1
 * 
 * d:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_gsens
 * TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER set to  TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME + 1
 * 
 * e:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_gsens
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE + 1
 * TCS_LAT_ACCELERATION set to  Tcs_4wd_clutch_lat_acc_thr - 1
 * 
 * f:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_gsens
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE - 1
 * TCS_END_TIMER[pt_eng_id] set to  2170
 * 
 * g:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_gsens
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE - 1
 * TCS_END_TIMER[pt_eng_id] set to  217
 * WHDYAC_DRIVING_SITUATION_I.TCS_MY_SPLIT_MODUS set to  False
 * TCS_LAT_ACCELERATION set to  (Tcs_4wd_clutch_lat_acc_thr + Tcs0_4wd_lat_acc_hyst) - 1
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to  False
 * WHDYACFD_DISABLE.VSUPP_CLU_DISABLED set to  False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  False
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 150), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 255), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 100), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_act_doubt_unknown,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_REF_HIGH_COUNTER_pre_val + 1,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER is equal to  TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to  Tc4wd_sup_act_doubt_unknown,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to  Tc4wd_sup_default,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_START is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP is equal to  True,  
 * 
 * g:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to  Tc4wd_sup_act_pattern_ref_high_brake,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_04
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_04
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_brake
 * TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER set to  TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME - 1
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_brake
 * TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER set to  TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME + 1
 * 
 * c:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_brake
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE + 1
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  False
 * TCS_LAT_ACCELERATION set to  Tcs_4wd_clutch_lat_acc_thr - 1
 * ESTIMATED_SLOPE_FILTERED set to  Tcs0_4wd_slope_thr + 1
 * ESTIMATED_SLOPE_ACTUAL set to  ESTIMATED_SLOPE_FILTERED + 1
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * BUS_ENGINE_SIGNAL_QUALITY.DRIVER_REQ_IDLE_QF set to  True
 * TCS_REFERENCE_VELO set to  Tcs_4wd_downhill_velo_thr + 1
 * 
 * d:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_brake
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE - 1
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  False
 * TCS_LAT_ACCELERATION set to  Tcs_4wd_clutch_lat_acc_thr - 1
 * ESTIMATED_SLOPE_FILTERED set to  Tcs0_4wd_slope_thr + 1
 * ESTIMATED_SLOPE_ACTUAL set to  ESTIMATED_SLOPE_FILTERED + 1
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * BUS_ENGINE_SIGNAL_QUALITY.DRIVER_REQ_IDLE_QF set to  True
 * TCS_REFERENCE_VELO set to  Tcs_4wd_downhill_velo_thr + 1
 * TCS_END_TIMER[pt_eng_id] set to  2170
 * 
 * e:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_brake
 * TC4WD_SUPPORT.REF_FAILURE set to  TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE - 1
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  True
 * TCS_END_TIMER[pt_eng_id] set to  217
 * TC4WDREF_LONG_SENS_VEHACC_MAX set to  (100 * Tcs0_4wd_possible_accel_gap) - 1
 * ESTIMATED_SLOPE_FILTERED set to  Tcs0_4wd_slope_thr - 1
 * GET_WHDYAC_ENGDEC_ACTIVE_SUM_mtc__return set to  True
 * TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER set to  TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME - 10
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * 
 * f:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_pattern_ref_high_brake + 3
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 100), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_REF_HIGH_COUNTER_pre_val + 1,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER is equal to  TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to  Tc4wd_sup_act_doubt_unknown,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to  Tc4wd_sup_default,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_START is equal to  False,  
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP is equal to  True,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION is equal to  Tc4wd_sup_act_pattern_ref_high_gsens,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_METHOD_Test_01
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_METHOD_Test_01
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_DECIDER set to  True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_DECIDER set to  True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_DECIDER set to  True
 * TCS_SENSOR_STATE.PULLED_HANDBRAKE_RECOGNIZED set to  True
 * 
 * d:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_DECIDER set to  True
 * 
 * e:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_DECIDER set to  True
 * 
 * f:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_DECIDER set to  True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 100), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DECIDER is equal to  False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to Tc4wd_sup_method_clutch,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_method_both,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_method_engine,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_method_brake,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_default,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_METHOD_Test_02
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_METHOD_Test_02
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to Tc4wd_sup_method_clutch
 * TC4WD_SUPPORT.EVENTS.E_CLUTCH_DONE set to True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to Tc4wd_sup_method_clutch
 * TC4WD_SUPPORT.EVENTS.E_CLUTCH_DONE set to False
 * 
 * c:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_brake
 * TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE set to  True
 * 
 * d:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_brake
 * TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE set to  False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_ref_high
 * 
 * e:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_brake
 * TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE set to  False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_ref_low
 * 
 * f:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_engine
 * TC4WD_SUPPORT.EVENTS.E_ENGINE_DONE set to  True
 * 
 * g:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_engine
 * TC4WD_SUPPORT.EVENTS.E_ENGINE_DONE set to  False
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to  False
 * TC4WD_SUPPORT.CONDITIONS.DOUBT1 set to  True
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_ref_high
 * 
 * h:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_both
 * TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE set to  True
 * TC4WD_SUPPORT.EVENTS.E_ENGINE_DONE set to  True
 * 
 * i:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_both
 * TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE set to  False
 * 
 * j:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_both
 * TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE set to  True
 * TC4WD_SUPPORT.EVENTS.E_ENGINE_DONE set to  False
 * 
 * k:
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD set to  Tc4wd_sup_method_both + 5
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to Tc4wd_sup_default,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is not equal to Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_default,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_method_both,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is not equal to  Tc4wd_sup_method_both,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_default,  
 * 
 * g:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_method_both,  
 * 
 * h:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is equal to  Tc4wd_sup_default,  
 * 
 * i:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is not equal to  Tc4wd_sup_default,  
 * 
 * j:
 * Check whether the value of TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD is not equal to  Tc4wd_sup_default,  
 * 
 * k:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_BRAKE_START is equal to  False,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_ENGINE_Test_01
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_ENGINE_Test_01
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.ENGINE_LOGIC set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_ENGINE set to  True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.ENGINE_LOGIC set to  Tc4wd_sup_engine_controlled
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to  True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.ENGINE_LOGIC set to  Tc4wd_sup_engine_controlled
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to  False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * TCS_STATUS_FLAGS.DRIVING_DIRECTION_VALID set to  True
 * TCS_STATUS_FLAGS.REVERSE_DRIVING_INFO set to  False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_MOVEMENT_DETECTED set to False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_DETECTION_IS_POSSIBLE set to False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * TC4WD_SUPPORT.COUNTERS.ENGINE_COUNTER set to  TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME + 1
 * 
 * d:
 * TC4WD_SUPPORT.STATES.ENGINE_LOGIC set to  Tc4wd_sup_engine_controlled
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to  False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to  True
 * TCS_STATUS_FLAGS.DRIVING_DIRECTION_VALID set to  True
 * TCS_STATUS_FLAGS.REVERSE_DRIVING_INFO set to  False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_MOVEMENT_DETECTED set to False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_DETECTION_IS_POSSIBLE set to False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * TC4WD_SUPPORT.COUNTERS.ENGINE_COUNTER set to  TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME - 1
 * 
 * e:
 * TC4WD_SUPPORT.STATES.ENGINE_LOGIC set to  Tc4wd_sup_engine_controlled + 1
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.ENGINE_LOGIC is equal to  Tc4wd_sup_engine_controlled,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.ENGINE_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.ENGINE_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.ENGINE_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_ENGINE_COUNTER_Preval + 1,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_ENGINE_Test_02
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_ENGINE_Test_02
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE set to  True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC set to  Tc4wd_sup_engine_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE set to  False
 * 
 * c:
 * TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC set to  Tc4wd_sup_engine_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE set to  True
 * TC4WD_SUPPORT.CONDITIONS.RESET_ENGINE_DEADTIMER set to  False
 * TC4WD_SUPPORT.COUNTERS.ENGINE_DEADTIME_COUNTER set to  Tcs0_4wd_engine_deadtime_thr
 * 
 * d:
 * TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC set to  Tc4wd_sup_engine_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE set to  True
 * TC4WD_SUPPORT.CONDITIONS.RESET_ENGINE_DEADTIMER set to  False
 * TC4WD_SUPPORT.COUNTERS.ENGINE_DEADTIME_COUNTER set to  Tcs0_4wd_engine_deadtime_thr - 1
 * 
 * e:
 * TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC set to  Tc4wd_sup_engine_deadtime_elapsed
 * TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE set to  False
 * 
 * f:
 * TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC set to  Tc4wd_sup_engine_deadtime_elapsed
 * TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE set to  True
 * 
 * g:
 * TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC set to  Tc4wd_sup_engine_deadtime_elapsed + 1
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC is equal to  Tc4wd_sup_engine_deadtime_running,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC is equal to  Tc4wd_sup_engine_deadtime_elapsed,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.ENGINE_DEADTIME_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_ENGINE_DEADTIME_COUNTER_Preval + 1,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.ENGINE_DEADTIME_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_ENGINE_DEADTIME_COUNTER_Preval + 1,  
 * 
 * g:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_01
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_01
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to  True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to  False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_ref_high
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_decision
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  10
 * 
 * d:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_decision
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  Tcs0_4wd_brake_cycle_time + 1
 * 
 * e:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_decision
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  0
 * 
 * f:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_dec_dur_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  10
 * 
 * g:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_dec_dur_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  Tcs0_4wd_brake_cycle_time + 1
 * 
 * h:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_dec_dur_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  0
 * 
 * i:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  10
 * 
 * j:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to  True
 * 
 * k:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to  False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to  Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to  True
 * 
 * l:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to  0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to  False
 * 
 * m:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to  Tc4wd_sup_brake_perm + 2
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_brake_decision,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_brake_perm,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_BRAKE_CYCLE_COUNTER_Preval - 1,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_brake_decision,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_BRAKE_CYCLE_COUNTER_Preval - 1,  
 * 
 * g:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_brake_dec_dur_perm,  
 * 
 * h:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_brake_perm,  
 * 
 * i:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_BRAKE_CYCLE_COUNTER_Preval - 1,  
 * 
 * j:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_brake_dec_dur_perm,  
 * 
 * k:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * l:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to  Tc4wd_sup_brake_perm,  
 * 
 * m:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_02
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_02
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to  True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC set to  Tc4wd_sup_brake_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to  False
 * 
 * c:
 * TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC set to  Tc4wd_sup_brake_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to  True
 * TC4WD_SUPPORT.COUNTERS.BRAKE_DEADTIME_COUNTER set to  Tcs0_4wd_brake_deadtime_thr
 * 
 * d:
 * TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC set to  Tc4wd_sup_brake_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to  True
 * TC4WD_SUPPORT.COUNTERS.BRAKE_DEADTIME_COUNTER set to  Tcs0_4wd_brake_deadtime_thr - 1
 * 
 * e:
 * TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC set to  Tc4wd_sup_brake_deadtime_elapsed
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to  False
 * 
 * f:
 * TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC set to  Tc4wd_sup_brake_deadtime_elapsed
 * TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE set to  True
 * 
 * g:
 * TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC set to  Tc4wd_sup_brake_deadtime_elapsed + 2
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC is equal to  Tc4wd_sup_brake_deadtime_running,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC is equal to  Tc4wd_sup_brake_deadtime_elapsed,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.BRAKE_DEADTIME_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_BRAKE_DEADTIME_COUNTER_Preval + 1,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.BRAKE_DEADTIME_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_BRAKE_DEADTIME_COUNTER_Preval + 1,  
 * 
 * g:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_03
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_03
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED set to 31
 * TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING set to True
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  False
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  False
 * WHDYACFD_DISABLE.VSUPP_BRK_DISABLED set to False
 * TCS_HCU_TEMPERATURE set to 0
 * SENSOR_SIGNALS.TCS_HCU_TEMPERATURE_AVAILABLE set to True
 * bus_clutch_signal.INFO.QUALIFIER set to  False
 * 
 * d:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * 
 * e:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to False
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE is equal to  False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_sk,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_sk_zero,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_dk_zero,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_04
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_04
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING set to True
 * TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED set to 31
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  False
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  False
 * WHDYACFD_DISABLE.VSUPP_BRK_DISABLED set to False
 * TCS_HCU_TEMPERATURE set to 0
 * SENSOR_SIGNALS.TCS_HCU_TEMPERATURE_AVAILABLE set to True
 * bus_clutch_signal.INFO.QUALIFIER set to  False
 * 
 * d:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE is equal to  False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_sk,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_sk_zero,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_05
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_05
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  False
 * TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED set to 31
 * TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING set to True
 * WHDYACFD_DISABLE.VSUPP_BRK_DISABLED set to False
 * TCS_HCU_TEMPERATURE set to 0
 * SENSOR_SIGNALS.TCS_HCU_TEMPERATURE_AVAILABLE set to True
 * bus_clutch_signal.INFO.QUALIFIER set to  False
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  False
 * 
 * d:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  True
 * 
 * e:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to False
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE is equal to  False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_dk,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_dk_zero,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_sk_zero,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_06
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_06
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  False
 * TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED set to 31
 * TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING set to True
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  False
 * WHDYACFD_DISABLE.VSUPP_BRK_DISABLED set to False
 * TCS_HCU_TEMPERATURE set to 0
 * SENSOR_SIGNALS.TCS_HCU_TEMPERATURE_AVAILABLE set to True
 * bus_clutch_signal.INFO.QUALIFIER set to  False
 * 
 * d:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  True
 * 
 * e:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk_zero + 5
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE is equal to  False,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_dk,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE is equal to  Tc4wd_sup_brake_circle_dk_zero,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_CLUTCH_Test_01
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_CLUTCH_Test_01
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.CLUTCH_LOGIC set to Tc4wd_sup_clutch_controlled + 5
 * 
 * b:
 * TC4WD_SUPPORT.STATES.CLUTCH_LOGIC set to Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_CLUTCH set to True
 * 
 * c:
 * TC4WD_SUPPORT.STATES.CLUTCH_LOGIC set to Tc4wd_sup_clutch_controlled
 * TC4WD_SUPPORT.EVENTS.E_CLUTCH set to True
 * TCS_SENSOR_STATE.PULLED_HANDBRAKE_RECOGNIZED set to  True
 * 
 * d:
 * TC4WD_SUPPORT.STATES.CLUTCH_LOGIC set to Tc4wd_sup_clutch_controlled
 * TCS_SENSOR_STATE.PULLED_HANDBRAKE_RECOGNIZED set to  False
 * bus_clutch_signal.INFO.QUALIFIER set to  False
 * WHDYACFD_DISABLE.VSUPP_CLU_DISABLED set to False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to True
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * TCS_RESISTANCE_ROAD set to  Tcs0_4wd_resist_cond_clutch - 1
 * TC4WD_SUPPORT.COUNTERS.CLUTCH_COUNTER set to  TC4WD_SUPPORT.THRESHOLDS.CLUTCH_MAX_TIME + 1
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.CLUTCH_LOGIC is equal to  Tc4wd_sup_clutch_controlled,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.CLUTCH_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.CLUTCH_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_CLUTCH_COUNTER_Preval,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_CLUTCH_Test_02
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_CLUTCH_Test_02
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC set to  Tc4wd_sup_default
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC set to  Tc4wd_sup_clutch_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  False
 * 
 * c:
 * TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC set to  Tc4wd_sup_clutch_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  True
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 0
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 0
 * 
 * d:
 * TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC set to  Tc4wd_sup_clutch_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  True
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 600
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 600
 * TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER set to  Tcs0_4wd_clutch_deadtime_thr
 * 
 * e:
 * TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC set to  Tc4wd_sup_clutch_deadtime_running
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  True
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 600
 * TC4WD_SUPP_REQU.CLUTCH_TORQUE set to 600
 * TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER set to  Tcs0_4wd_clutch_deadtime_thr - 1
 * 
 * f:
 * TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC set to  Tc4wd_sup_clutch_deadtime_elapsed
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  False
 * 
 * g:
 * TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC set to  Tc4wd_sup_clutch_deadtime_elapsed
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  True
 * 
 * h:
 * TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC set to  Tc4wd_sup_clutch_deadtime_elapsed + 5
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC is equal to  Tc4wd_sup_clutch_deadtime_running,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER is equal to  0,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC is equal to  Tc4wd_sup_clutch_deadtime_elapsed,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_CLUTCH_DEADTIME_COUNTER_Preval + 1,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC is equal to  Tc4wd_sup_default,  
 * 
 * g:
 * Check whether the value of TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER is equal to  TC4WD_SUPPORT_COUNTERS_CLUTCH_DEADTIME_COUNTER_Preval + 1,  
 * 
 * h:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_CHECK_STATE_REFERENCE_Test_01
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_CHECK_STATE_REFERENCE_Test_01
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * BUS_ENGINE_SIGNAL_QUALITY.DRIVER_REQ_IDLE_QF set to  True
 * GET_DRIVER_REQ_IDLE__return set to  True
 * TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE set to Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_FAILURE set to True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE set to Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_FAILURE set to False
 * 
 * c:
 * TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE set to Tc4wd_sup_in_doubt
 * TC4WD_SUPPORT.EVENTS.E_FAILURE_RESET set to True
 * 
 * d:
 * TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE set to Tc4wd_sup_in_doubt
 * TC4WD_SUPPORT.EVENTS.E_FAILURE_RESET set to False
 * 
 * e:
 * TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE set to Tc4wd_sup_in_doubt + 2
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE is equal to  Tc4wd_sup_in_doubt,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPPORT.REF_FAILURE is equal to  (wheel_velocity_t)MAX(TC4WD_SUPPORT.REF_FAILURE, 0),  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE is equal to  Tc4wd_sup_default,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPPORT.REF_FAILURE is equal to (wheel_velocity_t)MAX(TC4WD_SUPPORT.REF_FAILURE, -Tcs0_4wd_max_ref_failure),  
 * 
 * e:
 * Check whether the value of TC4WD_SUPPORT.EVENTS.E_DEFAULT is equal to  True,  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 *
**/


 TC4WD_SUPPORT_POST_PROCESSING_Test_01
============================================================
/**
 * @brief
 * Test case TC4WD_SUPPORT_POST_PROCESSING_Test_01
 *
 * @description
 *
 * @author
 * 
 *
 * @preconditions
 * a:
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm + 2
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to True
 * 
 * b:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_dk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  False
 * TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED set to 31
 * WHDYACFD_DISABLE.VSUPP_BRK_DISABLED set to False
 * TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING set to True
 * TCS_HCU_TEMPERATURE set to 0
 * SENSOR_SIGNALS.TCS_HCU_TEMPERATURE_AVAILABLE set to True
 * bus_clutch_signal.INFO.QUALIFIER set to  False
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  False
 * 
 * c:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_unknown
 * TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE set to True
 * 
 * d:
 * TC4WD_SUPPORT.STATES.BRAKE_LOGIC set to Tc4wd_sup_brake_perm
 * TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER set to 0
 * TC4WD_SUPPORT.EVENTS.E_BRAKE set to False
 * TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE set to Tc4wd_sup_brake_circle_sk_zero
 * TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE set to True
 * TCS_STATUS_FLAGS.TCS_VEHICLE_BRAKING set to  False
 * TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED set to 31
 * WHDYACFD_DISABLE.VSUPP_BRK_DISABLED set to False
 * TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING set to True
 * TCS_HCU_TEMPERATURE set to 0
 * SENSOR_SIGNALS.TCS_HCU_TEMPERATURE_AVAILABLE set to True
 * bus_clutch_signal.INFO.QUALIFIER set to  False
 * TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE set to  False
 * 
 * e:
 * TC4WD_SUPPORT.STATES.ENGINE_LOGIC set to Tc4wd_sup_default
 * TC4WD_SUPPORT.EVENTS.E_ENGINE set to True
 * 
 * f:
 * TC4WD_SUPPORT.STATES.ENGINE_LOGIC set to Tc4wd_sup_engine_controlled
 * WHDYACFD_DISABLE.VSUPP_ENG_DISABLED set to False
 * SENSOR_SIGNALS.TCS_LONG_SENS_AVAILABLE set to True
 * TCS_STATUS_FLAGS.DRIVING_DIRECTION_VALID set to True
 * TCS_STATUS_FLAGS.REVERSE_DRIVING_INFO set to False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_MOVEMENT_DETECTED set to False
 * AYC_GLOBAL_SITUATION_BITS.REVERSE_DETECTION_IS_POSSIBLE set to False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH1 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH2 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH3 set to  False
 * TCS_SENSOR_STATE.SENSOR_FAULT_WH4 set to  False
 * TC4WD_SUPPORT.COUNTERS.ENGINE_COUNTER set to TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME + 1
 * TC4WD_SUPP_CTRL.ENGINE_ACTIVE set to True
 * TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION set to Tc4wd_sup_act_doubt_ref_high
 *
 * @events
 * Calling Function TC4WD_SUPPORT_ENTRY (0, 300), 
 *
 * @results
 * a:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to Tc4wd_sup_default,  
 * 
 * b:
 * Check whether the value of TC4WD_SUPP_REQU.BRAKE_PRESSURE[WhFr] is equal to  Tcs0_4wd_support_pressure_front,  
 * Check whether the value of TC4WD_SUPP_REQU.BRAKE_PRESSURE[WhRl] is equal to  Tcs0_4wd_support_pressure_rear,  
 * Check whether the value of TC4WD_SUPP_CTRL.BRAKE_ACTIVE is equal to  True,  
 * 
 * c:
 * Check whether the value of TC4WD_SUPPORT.STATES.BRAKE_LOGIC is equal to Tc4wd_sup_default,  
 * 
 * d:
 * Check whether the value of TC4WD_SUPP_REQU.BRAKE_PRESSURE[WhFl] is equal to  Tcs0_4wd_support_pressure_front,  
 * Check whether the value of TC4WD_SUPP_REQU.BRAKE_PRESSURE[WhRr] is equal to  Tcs0_4wd_support_pressure_rear,  
 * Check whether the value of TC4WD_SUPP_CTRL.BRAKE_ACTIVE is equal to  True,  
 * 
 * e:
 * Check whether the value of TC4WD_SUPP_CTRL.ENGINE_ACTIVE is equal to  True,  
 * 
 * f:
 * Check whether the value of TC4WD_SUPP_REQU.ENGINE_TORQUE is equal to  MIN(Tcs0_axle_engine_torque_max, engine_torque),  
 * 
 * @type
 * Elementary Comparison Test (ECT)
 *
 * @regression
 * No
 *
 * @integration
 * No
 *
 * @validates
 *
 **/ 
    
    ==============================================================================
                                        EOF
    ==============================================================================
    