*********************************************************
*   Program      :   Doxygen Comments Generator          
*   Version      :   1.1                               
*   Developer    :   Anish Kumar                       
*   Date         :   25-June-2018                                           
*********************************************************

                                  
========================================================
*                   SUMMARY                            *        
========================================================
*   Date and Time               : Mon Jun 25 23:36:32 2018
*   Input File                  : E:/Learnings/Python/Precondtion_Update_Tool/Test.txt                                
*   Output File                 : output/Doxygen_Gen.txt
*   Number Of Test Cases        : 38
*   Number Of Lines             : 4711
*   Number Of Asserts           : 194
*   Number Of Asserts Missed    : 1
*   Where You Missed            :  Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_02
=======================================================**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_01
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	Get_driving_direction_valid() = True
*	Get_reverse_driving_info() = False
*	Get_ayc_reverse_movement() = False
*	Get_ayc_reverse_det_possible() = False
*
**	Get_driving_direction_valid() = False
*	Get_ayc_reverse_movement() = True
*
* @events
*	Calling Initialization function
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING = True	
*	
**	TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING = False;	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_02
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	( ESTIMATED_SLOPE_FILTERED ) >= ( TC4WD_SUPPORT . ENTRY_SLOPE )
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_gsens
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.ENTRY_SLOPE == MAX(TC4WD_SUPPORT.ENTRY_SLOPE, ESTIMATED_SLOPE_FILTERED);	
*	
**	TC4WD_SUPPORT.ENTRY_SLOPE = ESTIMATED_SLOPE_FILTERED; 	
*	TC4WD_SUPPORT.ENTRY_REF_FAILURE = TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_03
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) == True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE -= 80	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_04
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION != Tc4wd_sup_act_doubt_ref_low
*	ESTIMATED_SLOPE_ACTUAL = 1500
*	ESTIMATED_SLOPE_FILTERED = 500
*	Get_ayc_engine_control() == True
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) == True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_low
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = False
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME = Tcs0_4wd_feedback_max_time	
*	
**	TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME = Tcs0_4wd_feedback_min_time	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_05
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED < 0
*
**	TCS_ACTUAL_TF_TORQUE = 2000
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME = Tcs0_4wd_gsens_cnt_thr + 200	
*	
**	TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME = Tcs0_4wd_gsens_cnt_thr	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_06
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER < (Tcs0_4wd_clutch_deadtime_thr + (sint16)Scaled_time(140u /*ms*/)) 
*
**	TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER > (Tcs0_4wd_clutch_deadtime_thr + (sint16)Scaled_time(140u /*ms*/)) 
*	TC4WDREF_CLUTCH_ACCELERATION_TIMER > needed_est_time
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.THRESHOLDS.CLUTCH_MAX_TIME == Tcs0_4wd_clutch_max_open_time	
*	
**	TC4WD_SUPPORT.THRESHOLDS.CLUTCH_MAX_TIME == Tcs0_4wd_clutch_min_open_time	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_07 
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	Get_driver_req_idle_qf() = False
*	Get_driver_req_idle((uint16)Tcs0_pedal_pos_idle_thr) = 1u /* True */
*
**	Get_sensor_fault_wh1() = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.DOUBT2 == False	
*	
**	TC4WD_SUPPORT.CONDITIONS.DOUBT2 == True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_08 
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	(TC4WDREF_LONG_SENS_VEHACC_MAX - TCS_LONG_SENS_VEHACC) > (100 * Tcs0_4wd_possible_accel_gap)
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr
*	ESTIMATED_SLOPE_ACTUAL >= ESTIMATED_SLOPE_FILTERED
*	Get_tcs_long_sens_available() = True
*	Get_ayc_engine_control() = False
*	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.ENTRY_REF_FAILURE
*
**	Get_tcs_long_sens_available() = False
*
**	Get_tcs_long_sens_available() = False
*	TC4WD_SUPPORT.ENTRY_SLOPE > (ESTIMATED_SLOPE_FILTERED + 400)
*	Get_ayc_engine_control() = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.LOW_BY_CLUTCH == True	
*	TC4WD_SUPPORT.CONDITIONS.LOW_BY_BRAKE  == False	
*	TC4WD_SUPPORT.CONDITIONS.LOW_BY_ENGINE == True	
*	TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_CLUTCH == False	
*	TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_BRAKE == False	
*	TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_ENGINE == False	
*	
**	TC4WD_SUPPORT.CONDITIONS.LOW_BY_CLUTCH == False	
*	TC4WD_SUPPORT.CONDITIONS.LOW_BY_ENGINE == False	
*	
**	TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_CLUTCH == True	
*	TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_BRAKE == True	
*	TC4WD_SUPPORT.CONDITIONS.RESET_LOW_BY_ENGINE == True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_09 
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.REF_FAILURE < TC4WD_SUPPORT.ENTRY_REF_FAILURE
*	Get_ayc_engine_control() = True
*	TC4WD_SUPPORT.ENTRY_SLOPE > (ESTIMATED_SLOPE_FILTERED + 400)
*	Get_tcs_long_sens_available() = True
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*
**	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.ENTRY_REF_FAILURE
*	Get_tcs_long_sens_available() = False
*
**	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.ENTRY_REF_FAILURE
*	Get_tcs_long_sens_available() = False
*	TC4WD_SUPPORT.ENTRY_SLOPE <= ESTIMATED_SLOPE_FILTERED
*	Get_ayc_engine_control() = False
*
**	TC4WD_SUPPORT.ENTRY_SLOPE <= ESTIMATED_SLOPE_FILTERED
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.HIGH_BY_CLUTCH == True	
*	TC4WD_SUPPORT.CONDITIONS.HIGH_BY_BRAKE == True	
*	TC4WD_SUPPORT.CONDITIONS.HIGH_BY_ENGINE == True	
*	TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_CLUTCH == False	
*	TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_BRAKE == False	
*	TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_ENGINE == False	
*	
**	TC4WD_SUPPORT.CONDITIONS.HIGH_BY_CLUTCH == False	
*	TC4WD_SUPPORT.CONDITIONS.HIGH_BY_BRAKE == False	
*	TC4WD_SUPPORT.CONDITIONS.HIGH_BY_ENGINE == False	
*	
**	TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_CLUTCH == True	
*	TC4WD_SUPPORT.CONDITIONS.RESET_HIGH_BY_ENGINE == True	
*	
**	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_10 
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	(TC4WDREF_LONG_SENS_VEHACC_MAX - TCS_LONG_SENS_VEHACC) < (100 * Tcs0_4wd_possible_accel_gap) 
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = True
*
**	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = False
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.DO_GSENS == True	
*	
**	TC4WD_SUPPORT.CONDITIONS.DO_GSENS == False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_11 
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	ESTIMATED_SLOPE_SAVE > (ESTIMATED_SLOPE_FILTERED - 400) 
*
**	ESTIMATED_SLOPE_SAVE < (ESTIMATED_SLOPE_FILTERED - 400) 
*	Get_vsupp_eng_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.STOP_TOO_LOW = True	
*	
**	TC4WD_SUPPORT.CONDITIONS.STOP_TOO_LOW = False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_12 
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TCS_END_TIMER[pt_eng_id] <= Scaled_time(2170u /*ms*/)
*	Get_tcs_my_split_modus() = False
*	Get_tcs_my_split_modus() = False
*	Get_vsupp_eng_disabled() = False
*	Get_vsupp_clu_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*
**	TCS_END_TIMER[pt_eng_id] <= Scaled_time(2170u /*ms*/)
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.STOP_TOO_HIGH = False	
*	
**	TC4WD_SUPPORT.CONDITIONS.STOP_TOO_HIGH = True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_13 
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.DO_CLUTCH = (Tcs0_4wd_ref_supp_clutch_enable != 0)	
*	TC4WD_SUPPORT.CONDITIONS.DO_CLUTCH = False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_14
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.DO_ENGINE = (Tcs0_4wd_ref_supp_engine_enable != 0)	
*	TC4WD_SUPPORT.CONDITIONS.DO_ENGINE = False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_15
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.DO_BRAKE = (Tcs0_4wd_ref_supp_brake_enable != 0)	
*	TC4WD_SUPPORT.CONDITIONS.DO_BRAKE == False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_16
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_high
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION != Tc4wd_sup_act_doubt_ref_high
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.DO_ENGINE_AFTER_BRAKE == (Tcs0_4wd_ref_supp_engine_enable != 0)	
*	
**	TC4WD_SUPPORT.CONDITIONS.DO_ENGINE_AFTER_BRAKE = False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_17
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE = False
*	TC4WD_SUPPORT.CONDITIONS.DOUBT1 = True
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_high
*
**	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE = True
*	TC4WD_SUPPORT.CONDITIONS.DOUBT1 = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION != Tc4wd_sup_act_doubt_ref_high
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.DO_BRAKE_AFTER_ENGINE = (Tcs0_4wd_ref_supp_brake_enable != 0)	
*	
**	TC4WD_SUPPORT.CONDITIONS.DO_BRAKE_AFTER_ENGINE = False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_18
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	Get_vsupp_eng_disabled() = True
*
**	Get_vsupp_eng_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_driving_direction_valid() = True
*	Get_reverse_driving_info() = False
*	Get_ayc_reverse_movement() = False
*	Get_ayc_reverse_det_possible() = False
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*
**	Get_tcs_vehicle_braking() = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.STOP_ENGINE == True	
*	
**	TC4WD_SUPPORT.CONDITIONS.STOP_ENGINE = False	
*	
**	TC4WD_SUPPORT.CONDITIONS.FORCE_ZERO_BRAKE == True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_19
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	Get_pulled_handbr_recognized() = True
*
**	Get_pulled_handbr_recognized() = False
*	bus_clutch_signal.INFO.QUALIFIER = False
*	Get_vsupp_clu_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	TCS_RESISTANCE_ROAD < Tcs0_4wd_resist_cond_clutch
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.STOP_CLUTCH == True	
*	
**	TC4WD_SUPPORT.CONDITIONS.STOP_CLUTCH == False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_PRE_PROCESSING_Test_20
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 0
*	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 0
*
**	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 200
*	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 200
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.CONDITIONS.RESET_CLUTCH_DEADTIMER == True	
*	
**	TC4WD_SUPPORT.CONDITIONS.RESET_CLUTCH_DEADTIMER == False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_01
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	case Tc4wd_sup_default
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*	ESTIMATED_SLOPE_ACTUAL >= ESTIMATED_SLOPE_FILTERED 
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = False
*	Get_tcs_long_sens_available() = True
*	Get_driver_req_idle_qf() = True
*	TCS_REFERENCE_VELO > Tcs_4wd_downhill_velo_thr
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = False
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr
*	ESTIMATED_SLOPE_ACTUAL >= ESTIMATED_SLOPE_FILTERED
*	(TC4WDREF_LONG_SENS_VEHACC_MAX - TCS_LONG_SENS_VEHACC) > (100 * Tcs0_4wd_possible_accel_gap)
*	Get_ayc_engine_control() = False
*	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.ENTRY_REF_FAILURE
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = False
*	TC4WD_SUPPORT.REF_FAILURE < TC4WD_SUPPORT.ENTRY_REF_FAILURE
*	(TC4WDREF_LONG_SENS_VEHACC_MAX - TCS_LONG_SENS_VEHACC) < (100 * Tcs0_4wd_possible_accel_gap)   
*	Get_ayc_engine_control() = True
*	TC4WD_SUPPORT.ENTRY_SLOPE > (ESTIMATED_SLOPE_FILTERED + 400)
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH = True
*	Get_tcs_long_sens_available() = True
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_doubt_unknown	
*	
**	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE == False	
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP == True	
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_START == False	
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_doubt_ref_low	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_doubt_ref_high	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_02
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_high
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_high
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = False
*	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.ENTRY_REF_FAILURE
*	TC4WD_SUPPORT.ENTRY_SLOPE <= ESTIMATED_SLOPE_FILTERED
*	Get_tcs_long_sens_available() = False
*	Get_ayc_engine_control() = False
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_low
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_low
*	TC4WD_SUPPORT.ENTRY_SLOPE > (ESTIMATED_SLOPE_FILTERED + 400)
*	Get_tcs_long_sens_available() = False
*	Get_ayc_engine_control() = True
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE == False	
*	TC4WD_SUPPORT.EVENTS.E_FAILURE_RESET == True	
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP == False	
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_pattern_ref_high_gsens	
*	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER == 0	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_doubt_unknown	
*	
**	TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP == True	
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_pattern_ref_low	
*	
**	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_03
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_low
*	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = False
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*	ESTIMATED_SLOPE_ACTUAL >= ESTIMATED_SLOPE_FILTERED 
*	Get_tcs_long_sens_available() = True
*	Get_driver_req_idle_qf() = True
*	TCS_REFERENCE_VELO > Tcs_4wd_downhill_velo_thr
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_low
*	TC4WD_SUPPORT.CONDITIONS.DOUBT1 = False
*	TC4WD_SUPPORT.REF_FAILURE < TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	Get_sensor_fault_wh1() = True
*	ESTIMATED_SLOPE_SAVE > (ESTIMATED_SLOPE_FILTERED - 400) 
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_gsens
*	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER < TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_gsens
*	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER > TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_gsens
*	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_gsens
*	TC4WD_SUPPORT.REF_FAILURE < TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	TCS_END_TIMER[pt_eng_id] <= Scaled_time(2170u /*ms*/)
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_gsens
*	TC4WD_SUPPORT.REF_FAILURE < TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	TCS_END_TIMER[pt_eng_id] <= Scaled_time(2170u /*ms*/)
*	Get_tcs_my_split_modus() = False
*	Get_tcs_my_split_modus() = False
*	Get_vsupp_eng_disabled() = False
*	Get_vsupp_clu_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = False
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_doubt_unknown	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER++	
*	
**	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER == TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME	
*	
**	
**	TC4WD_SUPPORT.EVENTS.E_BRAKE_START == False	
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP  == True	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_pattern_ref_high_brake	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_ACTIVATION_Test_04
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_brake
*	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER < TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_brake
*	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER > TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_brake
*	TC4WD_SUPPORT.REF_FAILURE > TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = False
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*	ESTIMATED_SLOPE_ACTUAL >= ESTIMATED_SLOPE_FILTERED 
*	Get_tcs_long_sens_available() = True
*	Get_driver_req_idle_qf() = True
*	TCS_REFERENCE_VELO > Tcs_4wd_downhill_velo_thr
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_brake
*	TC4WD_SUPPORT.REF_FAILURE < TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = False
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*	ESTIMATED_SLOPE_FILTERED > Tcs0_4wd_slope_thr 
*	ESTIMATED_SLOPE_ACTUAL >= ESTIMATED_SLOPE_FILTERED 
*	Get_tcs_long_sens_available() = True
*	Get_driver_req_idle_qf() = True
*	TCS_REFERENCE_VELO > Tcs_4wd_downhill_velo_thr
*	TCS_END_TIMER[pt_eng_id] <= Scaled_time(2170u /*ms*/)
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_brake
*	TC4WD_SUPPORT.REF_FAILURE < TC4WD_SUPPORT.THRESHOLDS.MAX_REF_FAILURE
*	Get_sensor_fault_wh1() = True
*	TCS_END_TIMER[pt_eng_id] <= Scaled_time(2170u /*ms*/)
*	(TC4WDREF_LONG_SENS_VEHACC_MAX - TCS_LONG_SENS_VEHACC) < (100 * Tcs0_4wd_possible_accel_gap) 
*	 ESTIMATED_SLOPE_FILTERED < Tcs0_4wd_slope_thr
*	return value of function GET_WHDYAC_ENGDEC_ACTIVE_SUM(Whdyac_engdec_service_etc) = True
*	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER < TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	Get_tcs_long_sens_available() = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_brake
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER ++	
*	
**	TC4WD_SUPPORT.COUNTERS.REF_HIGH_COUNTER == TC4WD_SUPPORT.THRESHOLDS.GSENS_MAX_TIME	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_act_doubt_unknown	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION == Tc4wd_sup_default	
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_START == False	
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_STOP == True	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_pattern_ref_high_gsens	
*	
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT = True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_METHOD_Test_01
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_DECIDER = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_DECIDER = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_DECIDER = True
*	Get_pulled_handbr_recognized() = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_DECIDER = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_DECIDER = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_DECIDER = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.EVENTS.E_DECIDER == False	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD == Tc4wd_sup_method_clutch	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD == Tc4wd_sup_method_both	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD == Tc4wd_sup_method_engine	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD == Tc4wd_sup_method_brake	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD == Tc4wd_sup_default	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_METHOD_Test_02
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_clutch
*	TC4WD_SUPPORT.EVENTS.E_CLUTCH_DONE = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_clutch
*	TC4WD_SUPPORT.EVENTS.E_CLUTCH_DONE = False
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_brake
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_brake
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_high
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_brake
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION != Tc4wd_sup_act_doubt_ref_high
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_engine
*	TC4WD_SUPPORT.EVENTS.E_ENGINE = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_engine
*	TC4WD_SUPPORT.EVENTS.E_ENGINE = False
*	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE = False
*	TC4WD_SUPPORT.CONDITIONS.DOUBT1 = True
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_high
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_both
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE = True
*	TC4WD_SUPPORT.EVENTS.E_ENGINE_DONE = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_both
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD = Tc4wd_sup_method_both
*	TC4WD_SUPPORT.EVENTS.E_BRAKE_DONE = True
*	TC4WD_SUPPORT.EVENTS.E_ENGINE_DONE = True
*
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD != Tc4wd_sup_method_both
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD != Tc4wd_sup_default	
*	
**	
**	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_METHOD == Tc4wd_sup_method_both	
*	
**	
**	
**	
**	
**	
**	
**	TC4WD_SUPPORT.EVENTS.E_BRAKE_START == False	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_ENGINE_Test_01
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_ENGINE = True
*
**	case Tc4wd_sup_engine_controlled
*	Get_vsupp_eng_disabled() = True
*
**	case Tc4wd_sup_engine_controlled
*	Get_vsupp_eng_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_driving_direction_valid() = True
*	Get_reverse_driving_info() = False
*	Get_ayc_reverse_movement() = False
*	Get_ayc_reverse_det_possible() = False
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	TC4WD_SUPPORT.COUNTERS.ENGINE_COUNTER < TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME
*
**	case Tc4wd_sup_engine_controlled
*	Get_vsupp_eng_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_driving_direction_valid() = True
*	Get_reverse_driving_info() = False
*	Get_ayc_reverse_movement() = False
*	Get_ayc_reverse_det_possible() = False
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	TC4WD_SUPPORT.COUNTERS.ENGINE_COUNTER < TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME
*
**	case default
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.ENGINE_LOGIC == Tc4wd_sup_engine_controlled	
*	
**	TC4WD_SUPPORT.STATES.ENGINE_LOGIC == Tc4wd_sup_default	
*	
**	
**	TC4WD_SUPPORT.COUNTERS.ENGINE_COUNTER++	
*	
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT == True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_ENGINE_Test_02
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE = True
*
**	case Tc4wd_sup_engine_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE = False
*
**	case Tc4wd_sup_engine_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE = True
*	TC4WD_SUPPORT.CONDITIONS.RESET_ENGINE_DEADTIMER = False
*	TC4WD_SUPPORT.COUNTERS.ENGINE_DEADTIME_COUNTER >= Tcs0_4wd_engine_deadtime_thr
*
**	case Tc4wd_sup_engine_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE = True
*	TC4WD_SUPPORT.CONDITIONS.RESET_ENGINE_DEADTIMER = False
*	TC4WD_SUPPORT.COUNTERS.ENGINE_DEADTIME_COUNTER < Tcs0_4wd_engine_deadtime_thr
*
**	case Tc4wd_sup_engine_deadtime_elapsed
*	TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE = False
*
**	case Tc4wd_sup_engine_deadtime_elapsed
*	TC4WD_SUPPORT.STATE_INFOS.S_ENGINE_ACTIVE = True
*
**	case default
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC = Tc4wd_sup_engine_deadtime_running	
*	
**	TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC = Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC = Tc4wd_sup_engine_deadtime_elapsed	
*	
**	TC4WD_SUPPORT.COUNTERS.ENGINE_DEADTIME_COUNTER++	
*	
**	TC4WD_SUPPORT.STATES.ENGINE_DEADTIME_LOGIC == Tc4wd_sup_default	
*	
**	
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT == True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_01
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = True
*
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	case Tc4wd_sup_act_doubt_ref_high in TC4WD_SUPPORT_CHECK_STATE_ACTIVATION() function
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	case Tc4wd_sup_brake_decision
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER > 0
*
**	case Tc4wd_sup_brake_decision
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER = Tcs0_4wd_brake_cycle_time
*
**	case Tc4wd_sup_brake_decision
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*
**	case Tc4wd_sup_brake_dec_dur_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER > 0
*
**	case Tc4wd_sup_brake_dec_dur_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER = Tcs0_4wd_brake_cycle_time
*
**	case Tc4wd_sup_brake_dec_dur_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER > 0
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*
**	case default
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_brake_decision	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_brake_perm	
*	
**	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER--	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC = Tc4wd_sup_brake_decision	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC = Tc4wd_sup_default	
*	
**	
**	
**	
**	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_brake_dec_dur_perm	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_default	
*	
**	
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT == True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_02
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE = True
*
**	case Tc4wd_sup_brake_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE = False
*
**	case Tc4wd_sup_brake_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE = True
*	TC4WD_SUPPORT.COUNTERS.BRAKE_DEADTIME_COUNTER >= Tcs0_4wd_brake_deadtime_thr
*
**	case Tc4wd_sup_brake_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE = True
*	TC4WD_SUPPORT.COUNTERS.BRAKE_DEADTIME_COUNTER < Tcs0_4wd_brake_deadtime_thr
*
**	case Tc4wd_sup_brake_deadtime_elapsed
*	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE == False
*
**	case Tc4wd_sup_brake_deadtime_elapsed
*	TC4WD_SUPPORT.STATE_INFOS.S_BRAKE_ACTIVE == True
*
**	case default
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC == Tc4wd_sup_brake_deadtime_running	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC == Tc4wd_sup_brake_deadtime_elapsed	
*	
**	TC4WD_SUPPORT.COUNTERS.BRAKE_DEADTIME_COUNTER++	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_DEADTIME_LOGIC = Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.COUNTERS.BRAKE_DEADTIME_COUNTER	
*	
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT == True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_03
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_brake_circle_dk
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE == True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	case Tc4wd_sup_brake_circle_dk
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE == True
*	TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED > 0
*	TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING = True
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = False
*	Get_tcs_vehicle_braking() = False
*	Get_vsupp_brk_disabled() = False
*	TCS_HCU_TEMPERATURE > -150
*	Get_tcs_hcu_temp_avail() == True
*	bus_clutch_signal.INFO.QUALIFIER = False
*
**	case Tc4wd_sup_brake_circle_dk
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE == True
*
**	case Tc4wd_sup_brake_circle_dk
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = False
*	Get_tcs_vehicle_braking() = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = False	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_sk	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_sk_zero	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_dk_zero	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_04
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_brake_circle_dk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	case Tc4wd_sup_brake_circle_dk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*	TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING = True
*	TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED > 0
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = False
*	Get_tcs_vehicle_braking() = False
*	Get_vsupp_brk_disabled() = False
*	TCS_HCU_TEMPERATURE > -150
*	Get_tcs_hcu_temp_avail() == True
*	bus_clutch_signal.INFO.QUALIFIER = False
*
**	case Tc4wd_sup_brake_circle_dk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*	Get_tcs_vehicle_braking() = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE == False	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_sk	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_sk_zero	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_05
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_brake_circle_dk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	case Tc4wd_sup_brake_circle_sk
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*	Get_tcs_vehicle_braking() = False
*	TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED > 0
*	TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING = True
*	Get_vsupp_brk_disabled() = False
*	TCS_HCU_TEMPERATURE > -150
*	Get_tcs_hcu_temp_avail() == True
*	bus_clutch_signal.INFO.QUALIFIER = False
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = False
*
**	case Tc4wd_sup_brake_circle_sk
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*	Get_tcs_vehicle_braking() = True
*
**	case Tc4wd_sup_brake_circle_sk
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = False
*	Get_tcs_vehicle_braking() = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE == False	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_dk	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_dk_zero	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_sk_zero	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_BRAKE_Test_06
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_brake_circle_sk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	case Tc4wd_sup_brake_circle_sk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*	Get_tcs_vehicle_braking() = False
*	TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED > 0
*	TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING = True
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = False
*	Get_vsupp_brk_disabled() = False
*	TCS_HCU_TEMPERATURE > -150
*	Get_tcs_hcu_temp_avail() == True
*	bus_clutch_signal.INFO.QUALIFIER = False
*
**	case Tc4wd_sup_brake_circle_sk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*	Get_tcs_vehicle_braking() = True
*
**	case default
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE == False	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_dk	
*	
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_dk_zero	
*	
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT = True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_CLUTCH_Test_01
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case default
*
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_CLUTCH = True
*
**	case Tc4wd_sup_clutch_controlled
*	TC4WD_SUPPORT.EVENTS.E_CLUTCH = True
*	Get_pulled_handbr_recognized() = True
*
**	case Tc4wd_sup_clutch_controlled
*	Get_pulled_handbr_recognized() = False
*	bus_clutch_signal.INFO.QUALIFIER = False
*	Get_vsupp_clu_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	TCS_RESISTANCE_ROAD < Tcs0_4wd_resist_cond_clutch
*	TC4WD_SUPPORT.COUNTERS.CLUTCH_COUNTER > TC4WD_SUPPORT.THRESHOLDS.CLUTCH_MAX_TIME
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT == True	
*	
**	TC4WD_SUPPORT.STATES.CLUTCH_LOGIC == Tc4wd_sup_clutch_controlled	
*	
**	TC4WD_SUPPORT.STATES.CLUTCH_LOGIC == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.COUNTERS.CLUTCH_COUNTER++	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_CLUTCH_Test_02
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = True
*
**	case Tc4wd_sup_clutch_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = False
*
**	case Tc4wd_sup_clutch_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = True
*	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 0
*	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 0
*
**	case Tc4wd_sup_clutch_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = True
*	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 200
*	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 200
*	TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER >= Tcs0_4wd_clutch_deadtime_thr
*
**	case Tc4wd_sup_clutch_deadtime_running
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = True
*	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 200
*	TC4WD_SUPP_REQU.CLUTCH_TORQUE = 200
*	TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER < Tcs0_4wd_clutch_deadtime_thr
*
**	case Tc4wd_sup_clutch_deadtime_elapsed
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = False
*
**	case Tc4wd_sup_clutch_deadtime_elapsed
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = True
*
**	case default
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC == Tc4wd_sup_clutch_deadtime_running	
*	
**	TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER = 0	
*	
**	TC4WD_SUPPORT.STATES.CLUTCH_DEADTIME_LOGIC = Tc4wd_sup_clutch_deadtime_elapsed	
*	
**	TC4WD_SUPPORT.COUNTERS.CLUTCH_DEADTIME_COUNTER++	
*	
**	
**	
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT == True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_CHECK_STATE_REFERENCE_Test_01
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	Get_driver_req_idle_qf() = True
*	Get_driver_req_idle((uint16)Tcs0_pedal_pos_idle_thr) = 1u
*	case Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_FAILURE = True
*
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_FAILURE = False
*
**	case Tc4wd_sup_in_doubt
*	TC4WD_SUPPORT.EVENTS.E_FAILURE_RESET = True
*
**	case Tc4wd_sup_in_doubt
*	TC4WD_SUPPORT.EVENTS.E_FAILURE_RESET = False
*
**	case default
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE == Tc4wd_sup_in_doubt	
*	
**	TC4WD_SUPPORT.REF_FAILURE == (wheel_velocity_t)MAX(TC4WD_SUPPORT.REF_FAILURE, 0)	
*	
**	TC4WD_SUPPORT.STATES.OBERSERVER_OF_REFERENCE == Tc4wd_sup_default	
*	
**	TC4WD_SUPPORT.REF_FAILURE == (wheel_velocity_t)MAX(TC4WD_SUPPORT.REF_FAILURE, -Tcs0_4wd_max_ref_failure)	
*	
**	TC4WD_SUPPORT.EVENTS.E_DEFAULT = True	
*	
* @type
*
* @regression
*
* @integration
*
* @validates
*
*
**/


 Test case TC4WD_SUPPORT_POST_PROCESSING_Test_01
============================================================
/**
* @brief
*
* @description
*
* @author
*	Anish Kumar A K
*
* @preconditions
**	TC4WD_SUPPORT.STATES.BRAKE_ACTIVE_CIRCLE = Tc4wd_sup_brake_circle_sk
*	case default in function TC4WD_SUPPORT_CHECK_STATE_BRAKE() 
*	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	case Tc4wd_sup_brake_circle_dk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*	Get_tcs_vehicle_braking() = False
*	TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED > 0
*	Get_vsupp_brk_disabled() = False
*	TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING = True
*	TCS_HCU_TEMPERATURE > -150
*	Get_tcs_hcu_temp_avail() == True
*	bus_clutch_signal.INFO.QUALIFIER = False
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = False
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_unknown
*	TC4WD_SUPPORT.EVENTS.E_DECIDER_DONE = True
*
**	case Tc4wd_sup_brake_perm
*	TC4WD_SUPPORT.COUNTERS.BRAKE_CYCLE_COUNTER != Tcs0_4wd_brake_cycle_time
*	TC4WD_SUPPORT.EVENTS.E_BRAKE = False
*	case Tc4wd_sup_brake_circle_sk_zero
*	TC4WD_SUPPORT.EVENTS.E_DK_SK_CHANGE = True
*	Get_tcs_vehicle_braking() = False
*	TC4WD_SUPPORT.BRAKE_TORQUE_REMAINED > 0
*	Get_vsupp_brk_disabled() = False
*	TC4WD_SUPPORT.CONDITIONS.VALID_FORWARD_DRIVING = True
*	TCS_HCU_TEMPERATURE > -150
*	Get_tcs_hcu_temp_avail() == True
*	bus_clutch_signal.INFO.QUALIFIER = False
*	TC4WD_SUPPORT.STATE_INFOS.S_CLUTCH_ACTIVE = False
*
**	case Tc4wd_sup_default
*	TC4WD_SUPPORT.EVENTS.E_ENGINE = True
*
**	case Tc4wd_sup_engine_controlled
*	Get_vsupp_eng_disabled() = False
*	Get_tcs_long_sens_available() = True
*	Get_driving_direction_valid() = True
*	Get_reverse_driving_info() = False
*	Get_ayc_reverse_movement() = False
*	Get_ayc_reverse_det_possible() = False
*	Get_sensor_fault_wh1() = False
*	Get_sensor_fault_wh2() = False
*	Get_sensor_fault_wh3() = False
*	Get_sensor_fault_wh4() = False
*	TC4WD_SUPPORT.COUNTERS.ENGINE_COUNTER < TC4WD_SUPPORT.THRESHOLDS.ENGINE_MAX_TIME
*	Get_tc4supp_engine_active() = True
*	TC4WD_SUPPORT.STATES.DECIDER_ON_SUPPORT_ACTIVATION = Tc4wd_sup_act_doubt_ref_high
*
* @events
*	Calling TC4WD_SUPPORT_ENTRY() function
*
* @results
**	TC4WD_SUPPORT.STATES.BRAKE_LOGIC == Tc4wd_sup_default	
*	
**	 Set_tc4supp_req_brk_press(WhFr, (brake_pressure_t)Tcs0_4wd_support_pressure_front)	
*	Set_tc4supp_req_brk_press(WhRl, (brake_pressure_t)Tcs0_4wd_support_pressure_rear)	
*	TC4WD_SUPP_CTRL.BRAKE_ACTIVE = True	
*	
**	
**	
**	TC4WD_SUPP_CTRL.ENGINE_ACTIVE = True	
*	
**	Calling TC4WD_SUPPORT_ENTRY() function	
*	